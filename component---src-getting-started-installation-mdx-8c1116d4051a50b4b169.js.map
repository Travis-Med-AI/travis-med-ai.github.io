{"version":3,"sources":["webpack:///./src/Getting Started/installation.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","isMDXComponent"],"mappings":"yPAMaA,G,UAAe,S,sNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,gBADR,gBAGA,iBAAQ,CACN,GAAM,iBADR,iBAGA,iBAAQ,CACN,GAAM,UADR,UAGA,sBAEE,iBAAQ,CACN,WAAc,MADhB,uBAGE,gBAAO,CACL,KAAQ,iDACR,WAAc,MAFhB,QAIA,iBAAQ,CACN,WAAc,MAGd,iBAAQ,CACN,WAAc,MADhB,8CAGE,gBAAO,CACL,KAAQ,4DACR,WAAc,MAFhB,aAHF,QAYN,iBAAQ,CACN,GAAM,UADR,UAGA,iBAAQ,CACN,GAAM,wBADR,wBAGA,sBAEE,iBAAQ,CACN,WAAc,MADhB,0BAKA,iBAAQ,CACN,WAAc,MADhB,0DAGE,gBAAO,CACL,KAAQ,qDACR,WAAc,MAFhB,QAHF,MAUF,uBAAK,mBAAU,CACX,UAAa,gBACb,WAAc,OAFb,kaAWL,sBAEE,iBAAQ,CACN,WAAc,MADhB,qCAKF,uBAAK,mBAAU,CACX,UAAa,gBACb,WAAc,OAFb,iDAKL,sBAEE,iBAAQ,CACN,WAAc,MADhB,6BAGE,yBAAgB,CACd,WAAc,MADhB,6BAKJ,uBAAK,mBAAU,CACX,UAAa,gBACb,WAAc,OAFb,qJAYL,sBAEE,iBAAQ,CACN,WAAc,MADhB,8DAKF,uBAAK,mBAAU,CACX,UAAa,gBACb,WAAc,OAFb,mEAKL,iBAAQ,CACN,GAAM,oBADR,oBAGA,uBAAK,mBAAU,CACX,UAAa,gBACb,WAAc,OAFb,4IAQL,iBAAQ,CACN,GAAM,iBADR,iBAGA,uBAAK,mBAAU,CACX,UAAa,gBACb,WAAc,OAFb,uD,oNAWTH,EAAWI,gBAAiB","file":"component---src-getting-started-installation-mdx-8c1116d4051a50b4b169.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/jacob/repos/website/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h1>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <h3 {...{\n      \"id\": \"docker\"\n    }}>{`Docker`}</h3>\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`Install docker from `}\n        <a {...{\n          \"href\": \"https://docs.docker.com/engine/install/ubuntu/\",\n          \"parentName\": \"li\"\n        }}>{`here`}</a>\n        <ul {...{\n          \"parentName\": \"li\"\n        }}>\n\n          <li {...{\n            \"parentName\": \"ul\"\n          }}>{`Make sure to add user to the docker group (`}\n            <a {...{\n              \"href\": \"https://docs.docker.com/engine/install/linux-postinstall/\",\n              \"parentName\": \"li\"\n            }}>{`more info`}</a>\n            {`)`}</li>\n\n        </ul></li>\n\n    </ul>\n    <h3 {...{\n      \"id\": \"nvidia\"\n    }}>{`Nvidia`}</h3>\n    <h4 {...{\n      \"id\": \"setup-nvidia-runtime\"\n    }}>{`Setup Nvidia Runtime`}</h4>\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`Install nvidia drivers`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`Install nvidia runtime using commands below (more info `}\n        <a {...{\n          \"href\": \"https://github.com/NVIDIA/nvidia-docker#quickstart\",\n          \"parentName\": \"li\"\n        }}>{`here`}</a>\n        {`)`}</li>\n\n    </ul>\n    <pre><code {...{\n        \"className\": \"language-bash\",\n        \"parentName\": \"pre\"\n      }}>{`#### Add the package repositories\ndistribution=$(. /etc/os-release;echo $ID$VERSION_ID)\ncurl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -\ncurl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list\n\nsudo apt-get update && sudo apt-get install -y nvidia-container-toolkit\nsudo systemctl restart docker\n`}</code></pre>\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`Install nvidia-container-runtime`}</li>\n\n    </ul>\n    <pre><code {...{\n        \"className\": \"language-bash\",\n        \"parentName\": \"pre\"\n      }}>{`sudo apt install nvidia-container-runtime \n`}</code></pre>\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`Add the following file at `}\n        <inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`/etc/docker/daemon.json`}</inlineCode></li>\n\n    </ul>\n    <pre><code {...{\n        \"className\": \"language-json\",\n        \"parentName\": \"pre\"\n      }}>{`{\n    \"runtimes\": {\n        \"nvidia\": {\n            \"path\": \"nvidia-container-runtime\",\n            \"runtimeArgs\": []\n        }\n    }\n}\n`}</code></pre>\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`Test that the setup is working with the following command`}</li>\n\n    </ul>\n    <pre><code {...{\n        \"className\": \"language-bash\",\n        \"parentName\": \"pre\"\n      }}>{`docker run --runtime=nvidia nvidia/cuda:10.0-base nvidia-smi\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"clone-repository\"\n    }}>{`Clone repository`}</h2>\n    <pre><code {...{\n        \"className\": \"language-bash\",\n        \"parentName\": \"pre\"\n      }}>{`git clone git@github.com:tclarke104/med-ai --recursive-submodules # download\ncd med-ai/med-ai-model\nchmod +x ./build.sh\n./build.sh\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"start-project\"\n    }}>{`Start project`}</h2>\n    <pre><code {...{\n        \"className\": \"language-bash\",\n        \"parentName\": \"pre\"\n      }}>{`cd med-ai\nchmod +x ./start.sh\n./start.sh\n`}</code></pre>\n\n  </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}
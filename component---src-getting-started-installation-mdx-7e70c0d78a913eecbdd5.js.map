{"version":3,"sources":["webpack:///./src/Getting Started/installation.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"yPAMaA,G,UAAe,S,sNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,gBADR,gBAGA,iBAAQ,CACN,GAAM,iBADR,iBAGA,iBAAQ,CACN,GAAM,UADR,UAGA,sBACE,kBAAIC,WAAW,MAAf,uBAA4C,6BAAGA,WAAW,MAAS,CAC/D,KAAQ,mDADgC,QAE3B,kBAAIA,WAAW,MAC5B,kBAAIA,WAAW,MAAf,8CAAmE,6BAAGA,WAAW,MAAS,CACtF,KAAQ,8DADuD,aAAnE,QAKN,iBAAQ,CACN,GAAM,UADR,UAGA,iBAAQ,CACN,GAAM,wBADR,wBAGA,sBACE,kBAAIA,WAAW,MAAf,0BACA,kBAAIA,WAAW,MAAf,0DAA+E,6BAAGA,WAAW,MAAS,CAClG,KAAQ,uDADmE,QAA/E,MAIF,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,kaAUL,sBACE,kBAAIA,WAAW,MAAf,qCAEF,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,iDAIL,sBACE,kBAAIA,WAAW,MAAf,6BAAkD,0BAAYA,WAAW,MAAvB,6BAEpD,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,qJAWL,sBACE,kBAAIA,WAAW,MAAf,8DAEF,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,mEAIL,iBAAQ,CACN,GAAM,oBADR,oBAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,4IAOL,iBAAQ,CACN,GAAM,iBADR,iBAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,2CAKL,gDAA+B,6BAAGA,WAAW,KAAQ,CACjD,KAAQ,0BADmB,yBAA/B,W,oNAOJJ,EAAWK,gBAAiB","file":"component---src-getting-started-installation-mdx-7e70c0d78a913eecbdd5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/travis-med-ai.github.io/travis-med-ai.github.io/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h1>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <h3 {...{\n      \"id\": \"docker\"\n    }}>{`Docker`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Install docker from `}<a parentName=\"li\" {...{\n          \"href\": \"https://docs.docker.com/engine/install/ubuntu/\"\n        }}>{`here`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\">{`Make sure to add user to the docker group (`}<a parentName=\"li\" {...{\n              \"href\": \"https://docs.docker.com/engine/install/linux-postinstall/\"\n            }}>{`more info`}</a>{`)`}</li>\n        </ul></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"nvidia\"\n    }}>{`Nvidia`}</h3>\n    <h4 {...{\n      \"id\": \"setup-nvidia-runtime\"\n    }}>{`Setup Nvidia Runtime`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`Install nvidia drivers`}</li>\n      <li parentName=\"ul\">{`Install nvidia runtime using commands below (more info `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/NVIDIA/nvidia-docker#quickstart\"\n        }}>{`here`}</a>{`)`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`#### Add the package repositories\ndistribution=$(. /etc/os-release;echo $ID$VERSION_ID)\ncurl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -\ncurl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list\n\nsudo apt-get update && sudo apt-get install -y nvidia-container-toolkit\nsudo systemctl restart docker\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Install nvidia-container-runtime`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`sudo apt install nvidia-container-runtime \n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Add the following file at `}<inlineCode parentName=\"li\">{`/etc/docker/daemon.json`}</inlineCode></li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"runtimes\": {\n        \"nvidia\": {\n            \"path\": \"nvidia-container-runtime\",\n            \"runtimeArgs\": []\n        }\n    }\n}\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Test that the setup is working with the following command`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`docker run --runtime=nvidia nvidia/cuda:10.0-base nvidia-smi\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"clone-repository\"\n    }}>{`Clone repository`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`git clone git@github.com:tclarke104/med-ai --recursive-submodules # download\ncd med-ai/med-ai-model\nchmod +x ./build.sh\n./build.sh\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"start-project\"\n    }}>{`Start project`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`cd med-ai\ndocker-compose up --build\n`}</code></pre>\n    <p>{`Site will be running at `}<a parentName=\"p\" {...{\n        \"href\": \"http://localhost:4200\"\n      }}>{`http://localhost:4200`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}
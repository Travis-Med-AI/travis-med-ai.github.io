(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{"01sy":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return b}));var a=n("wx14"),i=n("zLVn"),r=(n("q1tI"),n("7ljp")),l=n("hhGP"),c=(n("qKvR"),{});void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/Getting Started/installation.mdx"}});var o={_frontmatter:c},s=l.a;function b(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)(s,Object(a.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"installation"},"Installation"),Object(r.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(r.b)("h3",{id:"docker"},"Docker"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Install docker from ",Object(r.b)("a",{href:"https://docs.docker.com/engine/install/ubuntu/",parentName:"li"},"here"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Make sure to add user to the docker group (",Object(r.b)("a",{href:"https://docs.docker.com/engine/install/linux-postinstall/",parentName:"li"},"more info"),")")))),Object(r.b)("h3",{id:"nvidia"},"Nvidia"),Object(r.b)("h4",{id:"setup-nvidia-runtime"},"Setup Nvidia Runtime"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Install nvidia drivers"),Object(r.b)("li",{parentName:"ul"},"Install nvidia runtime using commands below (more info ",Object(r.b)("a",{href:"https://github.com/NVIDIA/nvidia-docker#quickstart",parentName:"li"},"here"),")")),Object(r.b)("pre",null,Object(r.b)("code",{className:"language-bash",parentName:"pre"},"#### Add the package repositories\ndistribution=$(. /etc/os-release;echo $ID$VERSION_ID)\ncurl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -\ncurl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list\n\nsudo apt-get update && sudo apt-get install -y nvidia-container-toolkit\nsudo systemctl restart docker\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Install nvidia-container-runtime")),Object(r.b)("pre",null,Object(r.b)("code",{className:"language-bash",parentName:"pre"},"sudo apt install nvidia-container-runtime \n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Add the following file at ",Object(r.b)("inlineCode",{parentName:"li"},"/etc/docker/daemon.json"))),Object(r.b)("pre",null,Object(r.b)("code",{className:"language-json",parentName:"pre"},'{\n    "runtimes": {\n        "nvidia": {\n            "path": "nvidia-container-runtime",\n            "runtimeArgs": []\n        }\n    }\n}\n')),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Test that the setup is working with the following command")),Object(r.b)("pre",null,Object(r.b)("code",{className:"language-bash",parentName:"pre"},"docker run --runtime=nvidia nvidia/cuda:10.0-base nvidia-smi\n")),Object(r.b)("h2",{id:"clone-repository"},"Clone repository"),Object(r.b)("pre",null,Object(r.b)("code",{className:"language-bash",parentName:"pre"},"git clone git@github.com:tclarke104/med-ai --recursive-submodules # download\ncd med-ai/med-ai-model\nchmod +x ./build.sh\n./build.sh\n")),Object(r.b)("h2",{id:"start-project"},"Start project"),Object(r.b)("pre",null,Object(r.b)("code",{className:"language-bash",parentName:"pre"},"cd med-ai\nchmod +x ./start.sh\n./start.sh\n")),Object(r.b)("p",null,"Site will be running at localhost:4200."))}void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/Getting Started/installation.mdx"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-getting-started-installation-mdx-43c29ad171f163710080.js.map
{"version":3,"sources":["webpack:///./src/Contributing/contributing-models.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mQAQaA,G,oBAAe,S,0NAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,uBADR,uBAGA,qGAAoF,6BAAGC,WAAW,KAAQ,CACtG,KAAQ,oDADwE,qBAApF,6BAGA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,sCAGL,mEAAkD,6BAAGA,WAAW,KAAQ,CACpE,KAAQ,4BADsC,aAAlD,uPAG8N,6BAAGA,WAAW,KAAQ,CAChP,KAAQ,yBADkN,UAG9N,iBAAQ,CACN,GAAM,uBADR,uBAGA,gFACA,YAAC,aAAD,MACA,iBAAQ,CACN,GAAM,oBADR,oBAGA,6EACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,yPAaL,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,aAAD,Y,wNAKJJ,EAAWK,gBAAiB","file":"component---src-contributing-contributing-models-mdx-9b3b77d457556ea0dc9e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/travis-med-ai.github.io/travis-med-ai.github.io/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport * as Components from \"./manifest.tsx\";\nimport { Playground, Props } from \"docz\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"contributing-models\"\n    }}>{`Contributing Models`}</h1>\n    <p>{`New models can be added to travis med ai by submitting a pull request to our `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/Travis-Med-AI/model-registry\"\n      }}>{`models-repository`}</a>{` in the following format:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`model-title/\n    manifest.json\n`}</code></pre>\n    <p>{`At travis med ai, all models are hosted on `}<a parentName=\"p\" {...{\n        \"href\": \"https://hub.docker.com/\"\n      }}>{`dockerhub`}</a>{` as docker images.\nYour manifest.json file will contain all pertinent information for integrating your model into our system (i.e. location of the docker image, display name, etc.). More information on how to structure a manifest.json file is `}<a parentName=\"p\" {...{\n        \"href\": \"#manifest-properties\"\n      }}>{`below`}</a></p>\n    <h2 {...{\n      \"id\": \"manifest-properties\"\n    }}>{`Manifest Properties`}</h2>\n    <p>{`Your manifest should contain the following information:`}</p>\n    <Components.ParamTable />\n    <h2 {...{\n      \"id\": \"example-manifest\"\n    }}>{`Example Manifest`}</h2>\n    <p>{`The following is an example of a completed manifest:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`// manifest.json\n{\n  \"tag\": \"tclarke104/ich-model:0.1\",\n  \"displayName\": \"Intracranial Hemorrhage Detection\",\n  \"input\": \"CT\",\n  \"modality\": \"CT\",\n  \"inputType\": \"DICOM\",\n  \"output\": \"Class_Probabilities\",\n  \"hasImageOutput\": false\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"enums\"\n    }}>{`Enums`}</h2>\n    <Components.EnumsBlock />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}